on:
  workflow_dispatch:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release
env:
  REPO_NAME: gstvkvideoparser
  PRETTY_NAME: GstVkVideoParser
jobs:
  build-release:
    name: Build release
    uses: ./.github/workflows/main.yml
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-release
    strategy:
      matrix:
        platform: [linux-x86_64, windows-x64, linux-x86_64-full, windows-x64-full, linux-x86-full, windows-x86-full]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Archive ${{ matrix.platform }} zip results
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}-release-${{ matrix.platform }}
          path: ./
      - name: Create ${{ matrix.platform }} release
        shell: bash
        run:
          mv $REPO_NAME-release-${{ matrix.platform }}.zip $REPO_NAME-${{ github.ref_name }}-${{ matrix.platform }}.zip
      - name: Upload ${{ matrix.platform }} release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPO_NAME }}-${{ env.ref_name }}-${{ matrix.platform }}
          path: ${{ env.REPO_NAME }}-${{ env.ref_name }}-{{ matrix.platform }}.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: release-${{ github.ref_name }}
          release_name: ${{ env.PRETTY_NAME }} ${{ github.ref_name }}
          body: |
            ${{ env.PRETTY_NAME }}-${{ github.ref_name }} has been released. You can find details [here](https://github.com/Igalia/GstVkVideoParser/blob/main/Changelog.md)
          draft: false
          prerelease: false
      - name: Upload ${{ matrix.platform }} Release Asset
        id: upload-${{ matrix.platform }}-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}.zip
          asset_name: ${{ env.REPO_NAME }}-${{ github.ref_name }}-${{ matrix.platform }}.zip
          asset_content_type: application/zip

